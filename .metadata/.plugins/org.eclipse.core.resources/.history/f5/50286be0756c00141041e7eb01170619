/* $Id: starter_basic.java,v 1.15 2014/05/08 14:20:30 rp Exp $
 *
 * Basic starter:
 * Create some simple text, vector graphics and image output
 *
 * required software: PDFlib/PDFlib+PDI/PPS 9
 * required data: image data
 */

import com.pdflib.pdflib;
import com.pdflib.PDFlibException;

public class Basic {
    public static void main(String argv[]) {
        /* This is where the data files are. Adjust as necessary. */
        String searchpath = "../input";
        String outfile = "starter_basic.pdf";
        String title = "Starter Basic";

        pdflib p = null;
        String imagefile = "nesrin.jpg";
        String optlist;
        int image;
        int exitcode = 0;

        try {
            p = new pdflib();

            p.set_option("searchpath={" + searchpath + "}");

            /* This means we must check return values of load_font() etc. */
            p.set_option("errorpolicy=return");

            if (p.begin_document(outfile, "") == -1)
                throw new Exception("Error: " + p.get_errmsg());

            p.set_info("Creator", "PDFlib Cookbook");
            p.set_info("Title", title + " $Revision: 1.15 $");

            /*
             * We load the image before the first page, and use it on all pages
             */
            image = p.load_image("auto", imagefile, "");

            if (image == -1)
                throw new Exception("Error: " + p.get_errmsg());

            /* Page 1 */
            p.begin_page_ext(595, 842, "");

            /* use LinLibertine_R font and unicode encoding for placing the text
             * and demonstrate various options how to pass the unicode text to PDFlib
             */
            optlist = "fontname={LinLibertine_R} encoding=unicode embedding fontsize=24 ";

            /* using plain 7 bit ASCII text */
            p.fit_textline("en: Hello!", 50, 700, optlist);
            /* using unicode escapes */
            p.fit_textline("gr: \u0393\u03B5\u03B9\u03AC!", 50, 650, optlist);
            p.fit_textline("ru: \u041F\u0440\u0438\u0432\u0435\u0442!", 50, 600, optlist);
            /* using PDFlib's character references */
            p.fit_textline("es: &#xA1;Hola!", 50, 550, optlist + " charref=true");

            p.fit_image(image, 0.0, 0.0, "scale=0.25");

            p.end_page_ext("");

            /* Page 2 */
            p.begin_page_ext(595, 842, "");

            /* red rectangle */
            p.setcolor("fill", "rgb", 1.0, 0.0, 0.0, 0.0);
            p.rect(200, 200, 250, 150);
            p.fill();

            /* blue circle */
            p.setcolor("fill", "rgb", 0.0, 0.0, 1.0, 0.0);
            p.arc(400, 600, 100, 0, 360);
            p.fill();

            /* thick gray line */
            p.setcolor("stroke", "gray", 0.5, 0.0, 0.0, 0.0);
            p.setlinewidth(10);
            p.moveto(100, 500);
            p.lineto(300, 700);
            p.stroke();

            /*
             * Using the same image handle means the data will be copied to the
             * PDF only once, which saves space.
             */
            p.fit_image(image, 150.0, 25.0, "scale=0.25");
            p.end_page_ext("");

            /* Page 3 */
            p.begin_page_ext(595, 842, "");

            /* Fit the image to a box of predefined size (without distortion) */
            optlist = "boxsize={400 400} position={center} fitmethod=meet";

            p.fit_image(image, 100, 200, optlist);

            p.end_page_ext("");

            p.close_image(image);
            p.end_document("");

        }
        catch (PDFlibException e) {
            System.err.print("PDFlib exception occurred:\n");
            System.err.print("[" + e.get_errnum() + "] " + e.get_apiname()
                    + ": " + e.get_errmsg() + "\n");
            exitcode = 1;
        }
        catch (Exception e) {
            System.err.println(e.getMessage());
            exitcode = 1;
        }
        finally {
            if (p != null) {
                p.delete();
            }
            System.exit(exitcode);
        }
    }
}